#!py

"""

## needs a "last_salt_checkin" field in the cmdb as well as a minion_id field ###
Run with: 
# salt-call --local state.apply

__name__base__salt__<salt.loader_context.NamedLoaderContext object at 0x7f69f53bd130>
__grains__<salt.loader_context.NamedLoaderContext object at 0x7f69f53bd3a0>
__pillar__<salt.loader_context.NamedLoaderContext object at 0x7f69f52ba3a0>
__opts__{'__cli': 'salt-call',
 '__fs_update': True,
 '__role': 'minion',
 'acceptance_wait_time': 10,
 'acceptance_wait_time_max': 0,
 'always_verify_signature': False,
 'append_minionid_config_dirs': [],
 'arg': [],
 'args_stdin': False,
 'auth_safemode': False,
 'auth_timeout': 5,
 'auth_tries': 7,
 'auto_accept': True,
 'autoload_dynamic_modules': True,
 'autosign_timeout': 120,
 'azurefs_update_interval': 60,
 'backup_mode': '',
 'beacons': {},
 'beacons_before_connect': False,
 'cache': 'localfs',
 'cache_jobs': False,
 'cache_sreqs': True,
 'cachedir': '/var/cache/salt/minion',
 'caller': True,
 'clean_dynamic_modules': True,
 'cluster_mode': False,
 'cmd_safe': True,
 'conf_file': '/etc/salt/minion',
 'config_dir': '/etc/salt',
 'cython_enable': False,
 'decrypt_pillar': [],
 'decrypt_pillar_default': 'gpg',
 'decrypt_pillar_delimiter': ':',
 'decrypt_pillar_renderers': ['gpg'],
 'default_include': 'minion.d/*.conf',
 'default_top': 'base',
 'disable_modules': [],
 'disable_returners': [],
 'disabled_requisites': [],
 'discovery': False,
 'doc': False,
 'enable_fqdns_grains': True,
 'enable_gpu_grains': True,
 'enable_legacy_startup_events': True,
 'enable_zip_modules': False,
 'engines': [],
 'env_order': [],
 'event_match_type': 'startswith',
 'ext_job_cache': '',
 'extension_modules': '/var/cache/salt/minion/extmods',
 'extmod_blacklist': {},
 'extmod_whitelist': {},
 'failhard': False,
 'file_buffer_size': 262144,
 'file_client': 'local',
 'file_ignore_glob': [],
 'file_ignore_regex': [],
 'file_recv': False,
 'file_recv_max_size': 100,
 'file_roots': {'base': ['/srv/salt', '/srv/spm/salt']},
 'fileserver_backend': ['roots'],
 'fileserver_followsymlinks': True,
 'fileserver_ignoresymlinks': False,
 'fileserver_limit_traversal': False,
 'fips_mode': False,
 'force_color': False,
 'fun': 'state.apply',
 'git_pillar_base': 'master',
 'git_pillar_branch': 'master',
 'git_pillar_env': '',
 'git_pillar_fallback': '',
 'git_pillar_global_lock': True,
 'git_pillar_includes': True,
 'git_pillar_insecure_auth': False,
 'git_pillar_passphrase': '',
 'git_pillar_password': '',
 'git_pillar_privkey': '',
 'git_pillar_pubkey': '',
 'git_pillar_refspecs': ['+refs/heads/*:refs/remotes/origin/*',
                         '+refs/tags/*:refs/tags/*'],
 'git_pillar_root': '',
 'git_pillar_ssl_verify': True,
 'git_pillar_update_interval': 60,
 'git_pillar_user': '',
 'gitfs_base': 'master',
 'gitfs_disable_saltenv_mapping': False,
 'gitfs_fallback': '',
 'gitfs_global_lock': True,
 'gitfs_insecure_auth': False,
 'gitfs_mountpoint': '',
 'gitfs_passphrase': '',
 'gitfs_password': '',
 'gitfs_privkey': '',
 'gitfs_pubkey': '',
 'gitfs_ref_types': ['branch', 'tag', 'sha'],
 'gitfs_refspecs': ['+refs/heads/*:refs/remotes/origin/*',
                    '+refs/tags/*:refs/tags/*'],
 'gitfs_remotes': [],
 'gitfs_root': '',
 'gitfs_saltenv': [],
 'gitfs_saltenv_blacklist': [],
 'gitfs_saltenv_whitelist': [],
 'gitfs_ssl_verify': True,
 'gitfs_update_interval': 60,
 'gitfs_user': '',
 'gpg_cache': False,
 'gpg_cache_backend': 'disk',
 'gpg_cache_ttl': 86400,
 'grains': {'biosreleasedate': '11/12/2020',
            'biosversion': '6.00',
            'cpu_flags': ['fpu',
                          'vme',
                          'de',
                          'pse',
                          'tsc',
                          'msr',
                          'pae',
                          'mce',
                          'cx8',
                          'apic',
                          'sep',
                          'mtrr',
                          'pge',
                          'mca',
                          'cmov',
                          'pat',
                          'pse36',
                          'clflush',
                          'mmx',
                          'fxsr',
                          'sse',
                          'sse2',
                          'ss',
                          'syscall',
                          'nx',
                          'rdtscp',
                          'lm',
                          'constant_tsc',
                          'arch_perfmon',
                          'nopl',
                          'xtopology',
                          'tsc_reliable',
                          'nonstop_tsc',
                          'cpuid',
                          'pni',
                          'pclmulqdq',
                          'ssse3',
                          'cx16',
                          'pcid',
                          'sse4_1',
                          'sse4_2',
                          'x2apic',
                          'popcnt',
                          'tsc_deadline_timer',
                          'xsave',
                          'avx',
                          'f16c',
                          'rdrand',
                          'hypervisor',
                          'lahf_lm',
                          'cpuid_fault',
                          'pti',
                          'ssbd',
                          'ibrs',
                          'ibpb',
                          'stibp',
                          'fsgsbase',
                          'tsc_adjust',
                          'smep',
                          'arat',
                          'md_clear',
                          'flush_l1d',
                          'arch_capabilities'],
            'cpu_model': 'Intel(R) Xeon(R) CPU E3-1230 V2 @ 3.30GHz',
            'cpuarch': 'x86_64',
            'cwd': '/srv/salt',
            'disks': ['sr0', 'sda'],
            'dns': {'domain': '',
                    'ip4_nameservers': ['192.168.100.1'],
                    'ip6_nameservers': [],
                    'nameservers': ['192.168.100.1'],
                    'options': [],
                    'search': [],
                    'sortlist': []},
            'domain': '',
            'fqdn': 'saltmaster',
            'fqdn_ip4': ['127.0.1.1'],
            'fqdn_ip6': [],
            'fqdns': ['saltmaster'],
            'gid': 0,
            'gpus': [{'model': 'SVGA II Adapter', 'vendor': 'vmware'}],
            'groupname': 'root',
            'host': 'saltmaster',
            'hwaddr_interfaces': {'ens192': '00:50:56:96:76:c0',
                                  'lo': '00:00:00:00:00:00'},
            'id': 'saltmaster',
            'init': 'systemd',
            'ip4_gw': '192.168.100.1',
            'ip4_interfaces': {'ens192': ['192.168.100.27'],
                               'lo': ['127.0.0.1']},
            'ip6_gw': False,
            'ip6_interfaces': {'ens192': ['fe80::250:56ff:fe96:76c0'],
                               'lo': ['::1']},
            'ip_gw': True,
            'ip_interfaces': {'ens192': ['192.168.100.27',
                                         'fe80::250:56ff:fe96:76c0'],
                              'lo': ['127.0.0.1', '::1']},
            'ipv4': ['127.0.0.1', '192.168.100.27'],
            'ipv6': ['::1', 'fe80::250:56ff:fe96:76c0'],
            'kernel': 'Linux',
            'kernelparams': [('BOOT_IMAGE', '/vmlinuz-5.4.0-65-generic'),
                             ('root', '/dev/mapper/ubuntu--vg-ubuntu--lv'),
                             ('ro', None),
                             ('maybe-ubiquity', None)],
            'kernelrelease': '5.4.0-65-generic',
            'kernelversion': '#73-Ubuntu SMP Mon Jan 18 17:25:17 UTC 2021',
            'locale_info': {'defaultencoding': 'UTF-8',
                            'defaultlanguage': 'en_GB',
                            'detectedencoding': 'utf-8',
                            'timezone': 'UTC'},
            'localhost': 'saltmaster',
            'lsb_distrib_codename': 'focal',
            'lsb_distrib_description': 'Ubuntu 20.04.2 LTS',
            'lsb_distrib_id': 'Ubuntu',
            'lsb_distrib_release': '20.04',
            'lvm': {'ubuntu-vg': ['ubuntu-lv']},
            'machine_id': '1df581220e524a7c82ee4a57bc574a1e',
            'manufacturer': 'VMware, Inc.',
            'master': 'salt',
            'mdadm': [],
            'mem_total': 1987,
            'nodename': 'saltmaster',
            'num_cpus': 1,
            'num_gpus': 1,
            'os': 'Ubuntu',
            'os_family': 'Debian',
            'osarch': 'amd64',
            'oscodename': 'focal',
            'osfinger': 'Ubuntu-20.04',
            'osfullname': 'Ubuntu',
            'osmajorrelease': 20,
            'osrelease': '20.04',
            'osrelease_info': (20, 4),
            'path': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin',
            'pid': 35157,
            'productname': 'VMware Virtual Platform',
            'ps': 'ps -efHww',
            'pythonexecutable': '/usr/bin/python3',
            'pythonpath': ['/usr/lib/python3/dist-packages/git/ext/gitdb',
                           '/usr/bin',
                           '/usr/lib/python38.zip',
                           '/usr/lib/python3.8',
                           '/usr/lib/python3.8/lib-dynload',
                           '/usr/local/lib/python3.8/dist-packages',
                           '/usr/lib/python3/dist-packages',
                           '/usr/lib/python3/dist-packages/gitdb/ext/smmap'],
            'pythonversion': [3, 8, 5, 'final', 0],
            'saltpath': '/usr/lib/python3/dist-packages/salt',
            'saltversion': '3003.2',
            'saltversioninfo': [3003, 2],
            'serialnumber': 'VMware-42 16 5a 6e db de cc 5f-b1 b1 46 03 6f 9d '
                            'c3 2b',
            'server_id': 2021704993,
            'shell': '/bin/bash',
            'ssds': [],
            'swap_total': 2047,
            'systemd': {'features': '+PAM +AUDIT +SELINUX +IMA +APPARMOR '
                                    '+SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP '
                                    '+GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP '
                                    '+BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 '
                                    'default-hierarchy=hybrid',
                        'version': '245'},
            'systempath': ['/usr/local/sbin',
                           '/usr/local/bin',
                           '/usr/sbin',
                           '/usr/bin',
                           '/sbin',
                           '/bin',
                           '/usr/games',
                           '/usr/local/games',
                           '/snap/bin'],
            'uid': 0,
            'username': 'root',
            'uuid': '6e5a1642-dedb-5fcc-b1b1-46036f9dc32b',
            'virtual': 'VMware',
            'zfs_feature_flags': False,
            'zfs_support': False,
            'zmqversion': '4.3.2'},
 'grains_blacklist': [],
 'grains_cache': False,
 'grains_cache_expiration': 300,
 'grains_deep_merge': False,
 'grains_dirs': [],
 'grains_refresh_every': 0,
 'grains_run': False,
 'hard_crash': False,
 'hash_type': 'sha256',
 'hgfs_update_interval': 60,
 'http_connect_timeout': 20.0,
 'http_max_body': 107374182400,
 'http_request_timeout': 3600.0,
 'id': 'saltmaster',
 'id_function': {},
 'interface': '0.0.0.0',
 'ipc_mode': 'ipc',
 'ipc_write_buffer': 0,
 'ipv6': None,
 'jinja_env': {},
 'jinja_lstrip_blocks': False,
 'jinja_sls_env': {},
 'jinja_trim_blocks': False,
 'keysize': 2048,
 'local': True,
 'lock_saltenv': False,
 'log_datefmt': '%H:%M:%S',
 'log_datefmt_console': '%H:%M:%S',
 'log_datefmt_logfile': '%Y-%m-%d %H:%M:%S',
 'log_file': '/var/log/salt/minion',
 'log_fmt_console': '[%(levelname)-8s] %(message)s',
 'log_fmt_jid': '[JID: %(jid)s]',
 'log_fmt_logfile': '%(asctime)s,%(msecs)03d '
                    '[%(name)-17s:%(lineno)-4d][%(levelname)-8s][%(process)d] '
                    '%(message)s',
 'log_granular_levels': {},
 'log_level': 'warning',
 'log_level_logfile': 'warning',
 'log_rotate_backup_count': 0,
 'log_rotate_max_bytes': 0,
 'loop_interval': 1,
 'master': 'salt',
 'master_alive_interval': 0,
 'master_failback': False,
 'master_failback_interval': 0,
 'master_finger': '',
 'master_port': 4506,
 'master_shuffle': False,
 'master_sign_key_name': 'master_sign',
 'master_tops_first': False,
 'master_tries': 1,
 'master_type': 'str',
 'master_uri_format': 'default',
 'max_event_size': 1048576,
 'mine_enabled': True,
 'mine_interval': 60,
 'mine_return_job': False,
 'minion_id_caching': True,
 'minion_id_lowercase': False,
 'minion_id_remove_domain': False,
 'minion_jid_queue_hwm': 100,
 'minion_restart_command': [],
 'minion_sign_messages': False,
 'minionfs_update_interval': 60,
 'module_dirs': [],
 'modules_max_memory': -1,
 'multifunc_ordered': False,
 'multiprocessing': True,
 'no_color': False,
 'no_parse': [],
 'nodegroups': {},
 'on_demand_ext_pillar': ['libvirt', 'virtkey'],
 'open_mode': False,
 'optimization_order': [0, 1, 2],
 'output_file_append': False,
 'outputter_dirs': [],
 'password': None,
 'permissive_pki_access': False,
 'pidfile': '/var/run/salt-minion.pid',
 'pillar': {},
 'pillar_cache': False,
 'pillar_cache_backend': 'disk',
 'pillar_cache_ttl': 3600,
 'pillar_includes_override_sls': False,
 'pillar_merge_lists': False,
 'pillar_opts': False,
 'pillar_roots': {'base': ['/srv/pillar', '/srv/spm/pillar']},
 'pillar_source_merging_strategy': 'smart',
 'pillarenv': None,
 'pillarenv_from_saltenv': False,
 'ping_interval': 0,
 'pki_dir': '/etc/salt/pki/minion',
 'print_metadata': False,
 'process_count_max': -1,
 'profiling_enabled': False,
 'profiling_path': '/tmp/stats',
 'providers': {},
 'proxy_host': '',
 'proxy_password': '',
 'proxy_port': 0,
 'proxy_username': '',
 'pub_ret': True,
 'publisher_acl': {},
 'publisher_acl_blacklist': {},
 'random_master': False,
 'random_reauth_delay': 10,
 'random_startup_delay': 0,
 'range_server': 'range:80',
 'reactor_niceness': None,
 'reactor_refresh_interval': 60,
 'reactor_worker_hwm': 10000,
 'reactor_worker_threads': 10,
 'recon_default': 1000,
 'recon_max': 10000,
 'recon_randomize': True,
 'refresh_grains_cache': False,
 'rejected_retry': False,
 'render_dirs': [],
 'renderer': 'jinja|yaml',
 'renderer_blacklist': [],
 'renderer_whitelist': [],
 'resolve_dns_fallback': True,
 'restart_on_error': False,
 'retcode_passthrough': False,
 'retry_dns': 30,
 'retry_dns_count': None,
 'return': '',
 'return_retry_timer': 5,
 'return_retry_timer_max': 10,
 'return_retry_tries': 3,
 'returner_dirs': [],
 'root_dir': '/',
 'roots_update_interval': 60,
 's3fs_update_interval': 60,
 'salt_cp_chunk_size': 65536,
 'saltenv': None,
 'schedule': {},
 'scheduler_before_connect': False,
 'selected_output_option': 'state_output',
 'sign_pub_messages': False,
 'skip_grains': False,
 'sls_list': [],
 'snapper_states': False,
 'snapper_states_config': 'root',
 'sock_dir': '/var/run/salt/minion',
 'sock_pool_size': 1,
 'source_address': '',
 'source_interface_name': '',
 'source_publish_port': 0,
 'source_ret_port': 0,
 'ssh_merge_pillar': True,
 'ssl': None,
 'start_event_grains': [],
 'startup_states': '',
 'state_aggregate': False,
 'state_auto_order': True,
 'state_events': False,
 'state_output': 'full',
 'state_output_diff': False,
 'state_output_profile': True,
 'state_top': 'salt://top.sls',
 'state_top_saltenv': None,
 'state_verbose': True,
 'states_dirs': [],
 'sudo_user': '',
 'svnfs_update_interval': 60,
 'syndic_finger': '',
 'tcp_authentication_retries': 5,
 'tcp_keepalive': True,
 'tcp_keepalive_cnt': -1,
 'tcp_keepalive_idle': 300,
 'tcp_keepalive_intvl': -1,
 'tcp_pub_port': 4510,
 'tcp_pull_port': 4511,
 'tcp_reconnect_backoff': 1,
 'test': False,
 'thorium_interval': 0.5,
 'thorium_roots': {'base': ['/srv/thorium']},
 'thorium_top': 'top.sls',
 'thoriumenv': None,
 'top_file': '',
 'top_file_merging_strategy': 'merge',
 'transport': 'zeromq',
 'unique_jid': False,
 'update_restart_services': [],
 'update_url': False,
 'use_master_when_local': False,
 'user': 'root',
 'username': None,
 'utils_dirs': ['/var/cache/salt/minion/extmods/utils'],
 'verify_env': True,
 'verify_master_pubkey_sign': False,
 'whitelist_modules': [],
 'winrepo_branch': 'master',
 'winrepo_cache_expire_max': 604800,
 'winrepo_cache_expire_min': 1800,
 'winrepo_cachefile': 'winrepo.p',
 'winrepo_dir': '/srv/salt/win/repo',
 'winrepo_dir_ng': '/srv/salt/win/repo-ng',
 'winrepo_fallback': '',
 'winrepo_insecure_auth': False,
 'winrepo_passphrase': '',
 'winrepo_password': '',
 'winrepo_privkey': '',
 'winrepo_pubkey': '',
 'winrepo_refspecs': ['+refs/heads/*:refs/remotes/origin/*',
                      '+refs/tags/*:refs/tags/*'],
 'winrepo_remotes': ['https://github.com/saltstack/salt-winrepo.git'],
 'winrepo_remotes_ng': ['https://github.com/saltstack/salt-winrepo-ng.git'],
 'winrepo_source_dir': 'salt://win/repo-ng/',
 'winrepo_ssl_verify': True,
 'winrepo_user': '',
 'zmq_filtering': False,
 'zmq_monitor': False}
__env__'base'
__sls__'base'
"""

from pprint import pprint
import re
import requests

def debug_env(debug):
	f = open('/tmp/output', 'w')
	f.write('__name__')
	f.write(__name__)
	f.write('__salt__')
	pprint(__salt__, f)
	f.write('__grains__')
	pprint(__grains__, f)
	f.write('__pillar__')
	pprint(__pillar__, f)
	f.write('__opts__')
	pprint(__opts__, f)
	f.write('__env__')
	pprint(__env__, f)
	f.write('__sls__')
	pprint(__sls__, f)
	f.write(str(debug))
	f.close()

def run():
	username = 'admin'
	password = 'admin'
	config = {}
	grains = {}

	grains['phil'] = __grains__['os'].lower() + str(__grains__['osrelease_info'][0])
	config['test2'] = {
		'test': [
			'nop',
			{'name': __grains__,
			'test': {'item1':'blah'}},
		],
	}


	mac_address = None
	ip_address = None
	hostname = __grains__['host']

	for key, value in __grains__['hwaddr_interfaces'].items():
		if key != 'lo':
			mac_address = value

	for key, value in __grains__['ip_interfaces'].items():
		if key != 'lo':
			ip_address = value[0]


	blob = {'mac-address':mac_address, 'ip-address': ip_address, 'hostname': __grains__['host'], 'operating-system': __grains__['os'], 'customer': '1'}
	fields = []
	for key, value in blob.items():
		fields.append({'name':key,'value':value})

	json_blob = {'type_id': 1, 'author_id': 1, 'fields': fields}
	r = requests.post('http://192.168.100.79/rest/objects', auth=(username, password), json=json_blob)
	print(r)
	print(r.text)
	return config